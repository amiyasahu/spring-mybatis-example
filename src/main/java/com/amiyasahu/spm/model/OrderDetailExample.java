package com.amiyasahu.spm.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class OrderDetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    public OrderDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andOrdernumberIsNull() {
            addCriterion("orderNumber is null");
            return (Criteria) this;
        }

        public Criteria andOrdernumberIsNotNull() {
            addCriterion("orderNumber is not null");
            return (Criteria) this;
        }

        public Criteria andOrdernumberEqualTo(Integer value) {
            addCriterion("orderNumber =", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberNotEqualTo(Integer value) {
            addCriterion("orderNumber <>", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberGreaterThan(Integer value) {
            addCriterion("orderNumber >", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("orderNumber >=", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberLessThan(Integer value) {
            addCriterion("orderNumber <", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberLessThanOrEqualTo(Integer value) {
            addCriterion("orderNumber <=", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberIn(List<Integer> values) {
            addCriterion("orderNumber in", values, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberNotIn(List<Integer> values) {
            addCriterion("orderNumber not in", values, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberBetween(Integer value1, Integer value2) {
            addCriterion("orderNumber between", value1, value2, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberNotBetween(Integer value1, Integer value2) {
            addCriterion("orderNumber not between", value1, value2, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andProductcodeIsNull() {
            addCriterion("productCode is null");
            return (Criteria) this;
        }

        public Criteria andProductcodeIsNotNull() {
            addCriterion("productCode is not null");
            return (Criteria) this;
        }

        public Criteria andProductcodeEqualTo(String value) {
            addCriterion("productCode =", value, "productcode");
            return (Criteria) this;
        }

        public Criteria andProductcodeNotEqualTo(String value) {
            addCriterion("productCode <>", value, "productcode");
            return (Criteria) this;
        }

        public Criteria andProductcodeGreaterThan(String value) {
            addCriterion("productCode >", value, "productcode");
            return (Criteria) this;
        }

        public Criteria andProductcodeGreaterThanOrEqualTo(String value) {
            addCriterion("productCode >=", value, "productcode");
            return (Criteria) this;
        }

        public Criteria andProductcodeLessThan(String value) {
            addCriterion("productCode <", value, "productcode");
            return (Criteria) this;
        }

        public Criteria andProductcodeLessThanOrEqualTo(String value) {
            addCriterion("productCode <=", value, "productcode");
            return (Criteria) this;
        }

        public Criteria andProductcodeLike(String value) {
            addCriterion("productCode like", value, "productcode");
            return (Criteria) this;
        }

        public Criteria andProductcodeNotLike(String value) {
            addCriterion("productCode not like", value, "productcode");
            return (Criteria) this;
        }

        public Criteria andProductcodeIn(List<String> values) {
            addCriterion("productCode in", values, "productcode");
            return (Criteria) this;
        }

        public Criteria andProductcodeNotIn(List<String> values) {
            addCriterion("productCode not in", values, "productcode");
            return (Criteria) this;
        }

        public Criteria andProductcodeBetween(String value1, String value2) {
            addCriterion("productCode between", value1, value2, "productcode");
            return (Criteria) this;
        }

        public Criteria andProductcodeNotBetween(String value1, String value2) {
            addCriterion("productCode not between", value1, value2, "productcode");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedIsNull() {
            addCriterion("quantityOrdered is null");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedIsNotNull() {
            addCriterion("quantityOrdered is not null");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedEqualTo(Integer value) {
            addCriterion("quantityOrdered =", value, "quantityordered");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedNotEqualTo(Integer value) {
            addCriterion("quantityOrdered <>", value, "quantityordered");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedGreaterThan(Integer value) {
            addCriterion("quantityOrdered >", value, "quantityordered");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedGreaterThanOrEqualTo(Integer value) {
            addCriterion("quantityOrdered >=", value, "quantityordered");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedLessThan(Integer value) {
            addCriterion("quantityOrdered <", value, "quantityordered");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedLessThanOrEqualTo(Integer value) {
            addCriterion("quantityOrdered <=", value, "quantityordered");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedIn(List<Integer> values) {
            addCriterion("quantityOrdered in", values, "quantityordered");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedNotIn(List<Integer> values) {
            addCriterion("quantityOrdered not in", values, "quantityordered");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedBetween(Integer value1, Integer value2) {
            addCriterion("quantityOrdered between", value1, value2, "quantityordered");
            return (Criteria) this;
        }

        public Criteria andQuantityorderedNotBetween(Integer value1, Integer value2) {
            addCriterion("quantityOrdered not between", value1, value2, "quantityordered");
            return (Criteria) this;
        }

        public Criteria andPriceeachIsNull() {
            addCriterion("priceEach is null");
            return (Criteria) this;
        }

        public Criteria andPriceeachIsNotNull() {
            addCriterion("priceEach is not null");
            return (Criteria) this;
        }

        public Criteria andPriceeachEqualTo(BigDecimal value) {
            addCriterion("priceEach =", value, "priceeach");
            return (Criteria) this;
        }

        public Criteria andPriceeachNotEqualTo(BigDecimal value) {
            addCriterion("priceEach <>", value, "priceeach");
            return (Criteria) this;
        }

        public Criteria andPriceeachGreaterThan(BigDecimal value) {
            addCriterion("priceEach >", value, "priceeach");
            return (Criteria) this;
        }

        public Criteria andPriceeachGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("priceEach >=", value, "priceeach");
            return (Criteria) this;
        }

        public Criteria andPriceeachLessThan(BigDecimal value) {
            addCriterion("priceEach <", value, "priceeach");
            return (Criteria) this;
        }

        public Criteria andPriceeachLessThanOrEqualTo(BigDecimal value) {
            addCriterion("priceEach <=", value, "priceeach");
            return (Criteria) this;
        }

        public Criteria andPriceeachIn(List<BigDecimal> values) {
            addCriterion("priceEach in", values, "priceeach");
            return (Criteria) this;
        }

        public Criteria andPriceeachNotIn(List<BigDecimal> values) {
            addCriterion("priceEach not in", values, "priceeach");
            return (Criteria) this;
        }

        public Criteria andPriceeachBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("priceEach between", value1, value2, "priceeach");
            return (Criteria) this;
        }

        public Criteria andPriceeachNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("priceEach not between", value1, value2, "priceeach");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberIsNull() {
            addCriterion("orderLineNumber is null");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberIsNotNull() {
            addCriterion("orderLineNumber is not null");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberEqualTo(Short value) {
            addCriterion("orderLineNumber =", value, "orderlinenumber");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberNotEqualTo(Short value) {
            addCriterion("orderLineNumber <>", value, "orderlinenumber");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberGreaterThan(Short value) {
            addCriterion("orderLineNumber >", value, "orderlinenumber");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberGreaterThanOrEqualTo(Short value) {
            addCriterion("orderLineNumber >=", value, "orderlinenumber");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberLessThan(Short value) {
            addCriterion("orderLineNumber <", value, "orderlinenumber");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberLessThanOrEqualTo(Short value) {
            addCriterion("orderLineNumber <=", value, "orderlinenumber");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberIn(List<Short> values) {
            addCriterion("orderLineNumber in", values, "orderlinenumber");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberNotIn(List<Short> values) {
            addCriterion("orderLineNumber not in", values, "orderlinenumber");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberBetween(Short value1, Short value2) {
            addCriterion("orderLineNumber between", value1, value2, "orderlinenumber");
            return (Criteria) this;
        }

        public Criteria andOrderlinenumberNotBetween(Short value1, Short value2) {
            addCriterion("orderLineNumber not between", value1, value2, "orderlinenumber");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orderdetails
     *
     * @mbg.generated do_not_delete_during_merge Sun Sep 18 20:00:15 IST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orderdetails
     *
     * @mbg.generated Sun Sep 18 20:00:15 IST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}